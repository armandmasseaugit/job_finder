# Pre-commit configuration for code quality automation
# Install with: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: mixed-line-ending

  # Black - code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # isort - import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Ruff - fast Python linter
  # - repo: https://github.com/astral-sh/ruff-pre-commit
  #   rev: v0.1.8
  #   hooks:
  #     - id: ruff
  #       args: [--fix]

  # MyPy - type checking (temporarily disabled for development)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.5.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies: [types-requests, types-redis]
  #       args: [--ignore-missing-imports]

  # Bandit - security linter (temporarily disabled due to pbr dependency issue)
  # - repo: https://github.com/pycqa/bandit
  #   rev: 1.7.5
  #   hooks:
  #     - id: bandit
  #       args: [-r, src/, -f, json]
  #       exclude: tests/

  # Pytest - run tests
  # - repo: local
  #   hooks:
  #     - id: pytest
  #       name: pytest
  #       entry: pytest
  #       language: system
  #       pass_filenames: false
  #       always_run: true
  #       args: [tests/, --tb=short]
