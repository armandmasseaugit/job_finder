version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    image: job-finder-backend:latest
    container_name: job-finder-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
    volumes:
      - ./conf:/app/conf:ro
      - ./src:/app/src:ro
    depends_on:
      - redis
    networks:
      - job-finder-network

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    image: job-finder-frontend:latest
    container_name: job-finder-frontend
    ports:
      - "3000:3000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - backend
    networks:
      - job-finder-network

  kedro:
    build:
      context: .
      dockerfile: kedro.Dockerfile
    image: job-finder-kedro:latest
    container_name: job-finder-kedro
    command: ["kedro", "run"]
    environment:
      - PYTHONUNBUFFERED=1
      - AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
      - SENDER_EMAIL_PASSWORD=${SENDER_EMAIL_PASSWORD}
    volumes:
      - ./conf:/app/conf:ro
      - ./data:/app/data
    depends_on:
      - redis
    networks:
      - job-finder-network

  redis:
    image: redis:7-alpine
    container_name: job_finder_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - job-finder-network


volumes:
  redis_data:

networks:
  job-finder-network:
    driver: bridge
